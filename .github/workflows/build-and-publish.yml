name: Building project
on:
  push:
    branches: [ "main", "dev" ]
    paths:
      - '**/*.rs'
  pull_request:
    branches: [ "main" ]
env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Clone
      uses: actions/checkout@v4
    - name: Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Set lib postgres to PATH
      if: runner.os == 'Windows'
      run: |
        "$env:PGBIN" | Out-File -FilePath $env:GITHUB_PATH -Append
    - name: Build
      run: cargo build --release --verbose
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: discord_llm_ai-${{ runner.os }}-${{ github.sha }}
        path: |
          ./target/release/discord_bot_ai
          ./target/release/discord_bot_ai.exe
        compression-level: 0
  download-artifact-and-push-image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: discord_llm_ai-${{ runner.os }}-${{ github.sha }}
          path: ./target/release
      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}